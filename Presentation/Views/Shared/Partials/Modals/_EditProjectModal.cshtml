@model Project

@{
    ViewData["Title"] = "Edit Project";

    var project = Model;

    var userId = project.UserId;
    UserResult<User> userResult = await userService.GetUserByIdAsync(userId);
    List<User> userList = [];
    userList.Add(userResult.Result!);

    var options = new JsonSerializerOptions
            {
                PropertyNamingPolicy = JsonNamingPolicy.CamelCase,
            };

    var jsonList = JsonSerializer.Serialize(userList, options);

    var clientsResult = await clientService.GetClientsAsync();
    var clients = clientsResult.Result!.Select(c => new SelectListItem
    {
        Value = c.Id.ToString(),
        Text = c.ClientName,
    }).ToList();

    var statusesResult = await statusService.GetStatusesAsync();
    var statuses = statusesResult.Result!.Select(s => new SelectListItem
    {
        Value = s.Id.ToString(),
        Text = s.StatusName
    }).ToList();
}

<div id="editProjectModal-@project.Id" class="project-modal modal">
    <div class="card">
        <div class="card-header">
            <h3>@ViewData["Title"]</h3>
            <button type="button" data-type="close" data-target="#editProjectModal-@project.Id" class="btn btn-close"></button>
        </div>

        <div class="card-body">
            <form asp-controller="Projects" asp-action="EditProject" method="post" enctype="multipart/form-data" data-target="#editProjectModal-@project.Id" novalidate>
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="Image" />

                <div class="image-preview-container">
                    <img src="~/Images/Projects/@project.Image" />
                </div>
                
                <div class="form-group">
                    <label asp-for="ProjectName"></label>
                    <input asp-for="ProjectName" />

                </div>

                <div class="form-group">
                    <label asp-for="StatusId"></label>
                    <select asp-for="StatusId" asp-items="@statuses">
                        <option value="" selected hidden disabled>Choose Status</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="ClientId"></label>
                    <select asp-for="ClientId" asp-items="@clients">
                        <option value="" selected hidden disabled>Choose Client</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="Description"></label>
                    <div class="wysiwyg-container">
                        <textarea id="project-description-@project.Id" asp-for="Description"></textarea>
                        <div id="project-description-editor-@project.Id" class="wysiwyg-editor"></div>
                        <div id="project-description-toolbar-@project.Id" class="wysiwyg-toolbar">
                            <span class="ql-formats">
                                <button class="ql-bold"></button>
                                <button class="ql-italic"></button>
                                <button class="ql-underline"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-align" value=""></button>
                                <button class="ql-align" value="center"></button>
                                <button class="ql-align" value="right"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-list" value="bullet"></button>
                                <button class="ql-list" value="ordered"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-link"></button>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="date-group">
                    <div class="date-label">
                        <label asp-for="StartDate"></label>
                        <input asp-for="StartDate" />
                    </div>
                    <div class="date-label">
                        <label asp-for="EndDate"></label>
                        <input asp-for="EndDate" />
                    </div>
                </div>

                <div class="project-members-container">
                    <div class="project-members-group">

                        <div class="project-members">
                            <input type="hidden" asp-for="UserId" />

                            <div id="tagged-users-@project.Id" class="form-input form-tag-select">
                                <input type="text" id="user-search-@project.Id" class="form-tag-input" placeholder="Add member..." />

                                <div id="user-search-results-@project.Id" class="search-results"></div>
                            </div>

                        </div>

                        <label for="user-search"><i class="bi bi-search"></i></label>
                    </div>
                </div>

                <div class="budget-group">
                    <label asp-for="Budget"></label>
                    <div class="budget-input">
                        <i class="bi bi-currency-dollar"></i>
                        <input placeholder="0" asp-for="Budget" />
                    </div>
                </div>

                <button type="submit" class="btn btn-submit">Save</button>

            </form>
        </div>
    </div>
</div>

<script>

    initWysiwygEditor("#project-description-editor-@project?.Id", "#project-description-toolbar-@project?.Id", "#project-description-@project?.Id", "@Html.Raw(project?.Description ?? "")");

    initTagSelector({
        containerId: 'tagged-users-@project?.Id',
        inputId: 'user-search-@project?.Id',
        resultsId: 'user-search-results-@project?.Id',
        searchUrl: (query) => '@Url.Action("SearchUsers", "Members")' + '?term=' + encodeURIComponent(query),
        displayProperty: 'fullName',
        imageProperty: 'imageUrl',
        tagClass: 'user-tag',
        avatarFolder: '/images/profiles/',
        emptyMessage: 'No members found.',
        preSelected: @Html.Raw(jsonList),
        selectedInputIds: 'UserId'
    })
</script>